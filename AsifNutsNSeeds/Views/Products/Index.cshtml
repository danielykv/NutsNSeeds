@model PaginatedList<Product> // Update model type to PaginatedList<Product>

    @using AsifNutsNSeeds.Data
    @using AsifNutsNSeeds.Data.Enums

@{
    ViewData["Title"] = "List of Products";
}

@if (Model.Any())
{
        <div class="d-flex justify-content-center">
            <img src="https://i.ibb.co/wNy356M/d2c3a805b5d98195311d51d2eefd8cbc.jpg" width="100%" alt="Asif banner" />
        </div>
}
else
{
        <div class="container mt-4">
            <div class="row justify-content-center">
                <div class="col-md-8">
                    <div class="card text-center">
                        <div class="card-body">
                            <h3 class="card-title">Sorry, no products were found.</h3>
                            <p class="card-text">Please try a different search or check back later.</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
}
    

    <div class="d-flex justify-content-center mt-2 mb-2 border-bottom border-top">
        <a class="nav-link dropdown-toggle text-dark pe-0" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            <i class="bi bi-gear"></i> Sort
        </a>

        <div class="dropdown-menu" aria-labelledby="navbarDropdown">
            <a class="dropdown-item btn btn-dark m-2" asp-action="FilterByPriceLowToHigh">Sort by Price Low to High</a>
            <a class="dropdown-item btn btn-dark m-2" asp-action="FilterByPriceHighToLow">Sort by Price High to Low</a>
            <a class="dropdown-item btn btn-dark m-2" asp-action="FilterByPopularity">Sort by Popularity</a>
        </div>

        <a class="nav-link dropdown-toggle text-dark" id="navbarDropdown" data-bs-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false"><i class="bi bi-nut"></i> Category</a>
        <div class="dropdown-menu mx-2" aria-labelledby="navbarDropdown">

            <a class="dropdown-item btn btn-dark" asp-action="FilterByCategory" asp-controller="Products" asp-route-category="NutsAndSeeds">NutsAndSeeds</a>
            <a class="dropdown-item btn btn-dark" asp-action="FilterByCategory" asp-controller="Products" asp-route-category="Spices">Spices</a>
            <a class="dropdown-item btn btn-dark" asp-action="FilterByCategory" asp-controller="Products" asp-route-category="Legumes">Legumes</a>
            <a class="dropdown-item btn btn-dark" asp-action="FilterByCategory" asp-controller="Products" asp-route-category="DriedFruits">DriedFruits</a>
            <a class="dropdown-item btn btn-dark" asp-action="FilterByCategory" asp-controller="Products" asp-route-category="Pickles">Pickles</a>
            <a class="dropdown-item btn btn-dark" asp-action="FilterByCategory" asp-controller="Products" asp-route-category="Sweets">Sweets</a>


        </div>

        <form asp-action="FilterByPriceRange" asp-controller="Products" method="get" class="d-flex align-items-center">
            <label for="minPrice" class="w-50 me-2">Min Price</label>
            <input type="number" class="form-control form-control-sm me-2" id="minPrice" name="minPrice" placeholder="Min" required>

            <label for="maxPrice" class="w-50 me-2">Max Price</label>
            <input type="number" class="form-control form-control-sm" id="maxPrice" name="maxPrice" placeholder="Max" required>

            <button type="submit" class=" btn btn-sm"><i class="bi bi-funnel-fill"></i></button>
        </form>

        
    </div>

    



 


    <div class="container">
        <div class="row justify-content-center mx-auto">
        @foreach (var item in Model)
        {
                <div class="col-lg-3 col-md-5 col-sm-7 mb-3">
                    <div class="card border-0 shadow-lg">
                        @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                        {
                                <a class="float-right btn btn-outline-light" asp-action="Edit" asp-route-id="@item.Id"><i class="bi bi-pencil-square text-dark"></i></a>
                        }
                        <img src="@item.ImageURL" class="card-img-top" alt="@item.ProductName" style="object-fit: cover; max-height: 240px; max-width 300px;min-width: 300px; min-height: 240px; ">
                        <div class="card-body text-center" style="height: 10rem;">
                            <h5 class="card-title">@item.ProductName</h5>
                            <p class="card-text">
                                <small class="text-muted">Country: @item.Country.CountryName</small>
                            </p>
                      
                            <p class="card-text">
                                <small class="text-muted">Price: @item.ProductPrice $</small>
                            </p>
                            <p class="card-text">
                            @if (item.Stock > 0)
                            {
                                <p class="alert-success"><b>In stock</b></p>
                            }
                            else
                            {
                                <p class="alert-danger"><b>Not in stock</b></p>
                            }
                            </p>
                        </div>
                        <div class="card-footer bg-transparent justify-content-center mx-auto">
                            <div class="btn-group" role="group" aria-label="Basic example">
                                <a href="@Url.Action("Details", new { id = @item.Id })" class="btn btn-outline-dark btn-sm">
                                    Details
                                </a>
                            @if (item.Stock > 0)
                            {
                                    <a href="@Url.Action("BuyItemNow", "Orders", new { id = @item.Id })" class="btn btn-outline-dark btn-sm mx-2">
                                        Buy Now
                                    </a>
                                    <a href="@Url.Action("AddItemToShoppingCart", "Products", new { id = @item.Id })" class="btn btn-outline-dark btn-sm">
                                        Add to Cart
                                    </a>
                            }
                            else
                            {
                                @if (User.Identity.IsAuthenticated)
                                {
                                        <a href="@Url.Action("Notify", "Products", new { id = @item.Id })" class="btn btn-outline-dark btn-sm mx-2">
                                            Notify Me
                                        </a>
                                }
                            }
                            </div>
                        </div>
                    </div>
                </div>
        }
        </div>
    </div>
    <!-- Pagination -->
@if (Model.HasPreviousPage || Model.HasNextPage)
{
        <nav aria-label="Page navigation example">
            <ul class="pagination justify-content-center mb-2">
            @if (Model.HasPreviousPage)
            {
                if (@ViewData["FilterQueryString"] == "" || @ViewData["FilterQueryString"] == "FilterByPopularity" || @ViewData["FilterQueryString"] == "FilterByPriceHighToLow" || @ViewData["FilterQueryString"] == "FilterByPriceLowToHigh")
                {
                        <li class="page-item">
                            <a class="page-link text-dark" href="?page=@(Model.PageIndex - 1)" aria-label="Previous">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                        </li>
                }
                else
                {

                        <li class="page-item">
                            <a class="page-link text-dark" href="@ViewData["FilterQueryString"]&page=@(Model.PageIndex - 1)" aria-label="Previous">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                        </li>
                }

            }
            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                if (@ViewData["FilterQueryString"] == "" || @ViewData["FilterQueryString"] == "FilterByPopularity" || @ViewData["FilterQueryString"] == "FilterByPriceHighToLow" || @ViewData["FilterQueryString"] == "FilterByPriceLowToHigh")
                {

                        <li class="page-item @(i == Model.PageIndex ? "bg-light" : "")">
                            <a class="page-link  @(i == Model.PageIndex ? "font-weight-bold" : "text-dark")" href="?page=@i">@i</a>
                        </li>
                }
                else
                {
                        <li class="page-item @(i == Model.PageIndex ? "bg-light" : "")">
                            <a class="page-link @(i == Model.PageIndex ? "font-weight-bold" : "text-dark")" href="@ViewData["FilterQueryString"]&page=@i">@i</a>
                        </li>
                }

            }
            @if (Model.HasNextPage)
            {
                if (@ViewData["FilterQueryString"] == "" || @ViewData["FilterQueryString"] == "FilterByPopularity" || @ViewData["FilterQueryString"] == "FilterByPriceHighToLow" || @ViewData["FilterQueryString"] == "FilterByPriceLowToHigh")
                {

                        <li class="page-item">
                            <a class="page-link text-dark" href="?page=@(Model.PageIndex + 1)" aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                        </li>
                }
                else
                {
                        <li class="page-item">
                            <a class="page-link text-dark" href="@ViewData["FilterQueryString"]&page=@(Model.PageIndex + 1)" aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                        </li>
                }
            }
            </ul>
        </nav>
}



@await Html.PartialAsync("_CreateItem", "Products")
